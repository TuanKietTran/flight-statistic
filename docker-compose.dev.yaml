version: '3.8'

services:
  yugabytedb:
    image: yugabytedb/yugabyte:latest
    container_name: yugabytedb
    ports:
      - "5433:5433" # YCQL API
      - "9042:9042" # YSQL API
      - "7001:7000" # Master UI Port
      - "9002:9000" # TServer UI Port
      - "15433:15433"
    environment:
      - CLUSTER_NAME=yugabytedb-cluster
      - YB_MASTER_WEB_PORT=7000
      - YB_TSERVER_WEB_PORT=9000
    command: [ "bin/yugabyted", "start", "--daemon=false" ]
    networks:
      - my_network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - my_network

  spark-master:
    build: ./spark-master
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8080:8080"
    depends_on:
      - minio
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - MINIO_ENDPOINT=http://minio:9000
    networks:
      - my_network

  spark-worker:
    image: bde2020/spark-worker:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    networks:
      - my_network
      
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devcontainer
    volumes:
      - .:/workspace:cached
    environment:
      PYTHONPATH: "/workspace/src"
      JAVA_HOME: "/usr/lib/jvm/default-java"
    networks:
      - my_network

volumes:
  minio_data:
    driver: local

networks:
  my_network:
    driver: bridge